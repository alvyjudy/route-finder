(window.webpackJsonp=window.webpackJsonp||[]).push([[1],{25:function(e,t,n){"use strict";var r=n(4),o=n.n(r),a=n(5),i=n.n(a)()(o.a);i.push([e.i,"._1DnTK1Ih59CTfyLpAKgJct{font-size:1.3em;font-weight:bold;margin:1em 0 0 0}._2ydwa8atKKR0XN_KqlrlMc{width:15em;display:grid;grid-template-columns:1fr;justify-items:center}.dYYIC8g7L_-5S9Iax6dhY{justify-self:start}.cPq0bVivAIdhSFoughO-W{width:100%;margin:.5em;font-size:1em}._1PxKlhHw2232zCglfLKnSB{background-color:#000;border:0;color:#fff;width:100%;height:2.5em;outline:none;font-weight:bold}","",{version:3,sources:["webpack://./src/Delivery/RequestPickup/index.scss"],names:[],mappings:"AAAA,yBACE,eAAA,CACA,gBAAA,CACA,gBAAA,CAEF,yBACE,UAAA,CACA,YAAA,CACA,yBAAA,CACA,oBAAA,CAGF,uBACE,kBAAA,CAGF,uBACE,UAAA,CACA,WAAA,CACA,aAAA,CAGF,yBACE,qBAAA,CACA,QAAA,CACA,UAAA,CACA,UAAA,CACA,YAAA,CACA,YAAA,CACA,gBAAA",sourcesContent:[".ReqPickupTitle {\n  font-size: 1.3em;\n  font-weight: bold;\n  margin: 1em 0 0 0;\n}\n.RequestPickupForm {\n  width: 15em;\n  display: grid;\n  grid-template-columns: 1fr;\n  justify-items: center;\n}\n\n.SearchTitle {\n  justify-self: start;\n}\n\n.SearchBox {\n  width: 100%;\n  margin: 0.5em;\n  font-size: 1em;\n}\n\n.RequestButton {\n  background-color: black;\n  border: 0;\n  color: white;\n  width: 100%;\n  height: 2.5em;\n  outline: none;\n  font-weight: bold;\n}"],sourceRoot:""}]),i.locals={ReqPickupTitle:"_1DnTK1Ih59CTfyLpAKgJct",RequestPickupForm:"_2ydwa8atKKR0XN_KqlrlMc",SearchTitle:"dYYIC8g7L_-5S9Iax6dhY",SearchBox:"cPq0bVivAIdhSFoughO-W",RequestButton:"_1PxKlhHw2232zCglfLKnSB"},t.a=i},26:function(e,t,n){"use strict";var r=n(4),o=n.n(r),a=n(5),i=n.n(a)()(o.a);i.push([e.i,"._1YpKxhxnogEuQO2pljnBhB{display:grid;grid-template-columns:1fr;grid-auto-rows:2em}._1jYLwWWn38wmPICQQwgE3A{font-size:1.1em;display:flex;justify-content:start;align-items:center}._1jYLwWWn38wmPICQQwgE3A:first-child{background-color:#d9d9d9}","",{version:3,sources:["webpack://./src/Delivery/TypeNSearch/SearchResult.scss","webpack://./src/globalStyle/theme.scss"],names:[],mappings:"AAEA,yBACE,YAAA,CACA,yBAAA,CACA,kBAAA,CAGF,yBACE,eAAA,CAKA,YAAA,CACA,qBAAA,CACA,kBAAA,CANA,qCACE,wBCVQ",sourcesContent:['@use "../../globalStyle/theme";\n\n.Entries {\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-auto-rows: 2em;\n}\n\n.Entry {\n  font-size: 1.1em;\n  &:first-child {\n    background-color: theme.$darkShade;\n  }\n\n  display: flex;\n  justify-content: start;\n  align-items: center;\n}',"$lightShade: #f2f2f2;\n$darkShade: #d9d9d9;\n"],sourceRoot:""}]),i.locals={Entries:"_1YpKxhxnogEuQO2pljnBhB",Entry:"_1jYLwWWn38wmPICQQwgE3A"},t.a=i},27:function(e,t,n){"use strict";var r=n(4),o=n.n(r),a=n(5),i=n.n(a)()(o.a);i.push([e.i,"._2XPidy4i_GwtEeEBLcB9Hn,._1p2IzWFhpYtbRHTkCNNR7W{background-color:#f2f2f2;width:100%}._1p2IzWFhpYtbRHTkCNNR7W{display:flex;flex-direction:row;align-items:center;height:3em;justify-content:start}._2cxLQVYrmhfRvY8jkdTlXm{outline:none;border:none;font-size:1.1em;width:80%;background-color:inherit}._2cxLQVYrmhfRvY8jkdTlXm::placeholder{color:gray;opacity:1}._2XPidy4i_GwtEeEBLcB9Hn{position:absolute;height:12em;overflow:scroll}._2yA9avhTHyH6eCAjSf8JCD{position:relative;width:100%}._2fgIB7FzqVgfo3VM9qaor7{border:0;color:gray;outline:none}","",{version:3,sources:["webpack://./src/Delivery/TypeNSearch/index.scss","webpack://./src/globalStyle/theme.scss"],names:[],mappings:"AAEA,kDACE,wBCHW,CDIX,UAAA,CAGF,yBAEE,YAAA,CACA,kBAAA,CACA,kBAAA,CACA,UAAA,CACA,qBAAA,CAGF,yBACE,YAAA,CACA,WAAA,CACA,eAAA,CACA,SAAA,CACA,wBAAA,CAEA,sCACE,UAAA,CACA,SAAA,CAKJ,yBAEE,iBAAA,CACA,WAAA,CACA,eAAA,CAGF,yBACE,iBAAA,CACA,UAAA,CAGF,yBACE,QAAA,CACA,UAAA,CACA,YAAA",sourcesContent:['@use "../../globalStyle/theme";\n\n%SearchBox {\n  background-color: theme.$lightShade;\n  width: 100%;\n}\n\n.InputFieldBox {\n  @extend %SearchBox;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  height: 3em;\n  justify-content: start;\n}\n\n.InputField {\n  outline: none;\n  border: none;\n  font-size: 1.1em;\n  width: 80%;\n  background-color: inherit;\n\n  &::placeholder {\n    color: gray;\n    opacity: 1;\n  }\n}\n\n\n.ResultBox {\n  @extend %SearchBox;\n  position: absolute;\n  height: 12em;\n  overflow: scroll;\n}\n\n.ResultBoxAnchor {\n  position: relative;\n  width: 100%;\n}\n\n.Delete {\n  border: 0;\n  color: gray;\n  outline: none;\n}\n\n',"$lightShade: #f2f2f2;\n$darkShade: #d9d9d9;\n"],sourceRoot:""}]),i.locals={ResultBox:"_2XPidy4i_GwtEeEBLcB9Hn",InputFieldBox:"_1p2IzWFhpYtbRHTkCNNR7W",InputField:"_2cxLQVYrmhfRvY8jkdTlXm",ResultBoxAnchor:"_2yA9avhTHyH6eCAjSf8JCD",Delete:"_2fgIB7FzqVgfo3VM9qaor7"},t.a=i},28:function(e,t,n){"use strict";n.r(t);var r=n(0),o=n.n(r),a=n(3),i=n.n(a),A=n(25),c={insert:"head",singleton:!1},l=(i()(A.a,c),A.a.locals||{}),s=function(e){return o.a.createElement("div",null,"Searching")},u=n(26),d={insert:"head",singleton:!1},f=(i()(u.a,d),u.a.locals||{}),m=function(e){var t=e.results.slice(0,4),n=e.setters,r=n.setShow,a=n.setTyped,i=n.setSelected,A=function(e){return function(){console.log(e),r(!1),a(e),i(!0)}};return o.a.createElement("div",{className:f.Entries},t.map((function(e,t){return o.a.createElement("div",{className:f.Entry,key:t,onClick:A(e)},o.a.createElement("p",null,e))})))},h=n(27),C={insert:"head",singleton:!1},y=(i()(h.a,C),h.a.locals||{});function p(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(e)))return;var n=[],r=!0,o=!1,a=void 0;try{for(var i,A=e[Symbol.iterator]();!(r=(i=A.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(e){o=!0,a=e}finally{try{r||null==A.return||A.return()}finally{if(o)throw a}}return n}(e,t)||function(e,t){if(!e)return;if("string"==typeof e)return g(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return g(e,t)}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function g(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var b=function(e){var t,n,a,i=p(e.typewriter||Object(r.useState)(""),2),A=i[0],c=i[1],l=p(Object(r.useState)(!1),2),u=l[0],d=l[1],f=p(Object(r.useState)([]),2),h=f[0],C=f[1],g=p(Object(r.useState)(!1),2),b=g[0],w=g[1],B=p(Object(r.useState)(!1),2),E=B[0],S=B[1];return t=function(){if(!A||E)return C([]),d(!1),void w(!1);var e=setTimeout((function(){var e;console.log("this should not explode"),d(!0),w(!0),(e=A,new Promise((function(t,n){"false"===e?setTimeout((function(){t(["Address not found"])}),1e3):setTimeout((function(){t(["".concat(e,", ON"),"".concat(e,", QB"),"".concat(e,", NS"),"".concat(e,", BC"),"".concat(e,", NL"),"".concat(e,", MB")])}),1e3)}))).then((function(e){C(e),d(!1)})).catch((function(e){console.log("Something's wrong",e),d(!1)}))}),500);return function(){clearTimeout(e),d(!1),C([])}},n=[A],a=Object(r.useRef)(!0),Object(r.useEffect)((function(){var e=void 0;return a.current?a.current=!1:e=t(),e}),n),o.a.createElement("div",{className:e.className,"data-cy":e["data-cy"]},o.a.createElement("div",{className:y.InputFieldBox},o.a.createElement("input",{className:y.InputField,onChange:function(e){S(!1),c(e.target.value)},value:A,onFocus:function(e){A&&w(!1)},placeholder:e.whatToType||"Don't forget to specify label"}),A&&o.a.createElement("button",{className:y.Delete,onClick:function(e){w(!1),c("")}},"X")),o.a.createElement("div",{className:y.ResultBoxAnchor},b&&o.a.createElement("div",{className:y.ResultBox,onBlur:function(e){w(!1)}},u&&o.a.createElement(s,null),0===h.length||o.a.createElement(m,{results:h,setters:{setTyped:c,setShow:w,setSelected:S}}))))};function w(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(e)))return;var n=[],r=!0,o=!1,a=void 0;try{for(var i,A=e[Symbol.iterator]();!(r=(i=A.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(e){o=!0,a=e}finally{try{r||null==A.return||A.return()}finally{if(o)throw a}}return n}(e,t)||function(e,t){if(!e)return;if("string"==typeof e)return B(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return B(e,t)}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function B(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var E=function(){var e=w(Object(r.useState)(""),2),t=e[0],n=e[1],a=w(Object(r.useState)(""),2),i=a[0],A=a[1];return o.a.createElement(o.a.Fragment,null,o.a.createElement("p",{className:l.ReqPickupTitle},"Deliver your parcel now"),o.a.createElement("form",{className:l.RequestPickupForm,onSubmit:function(e){e.preventDefault()}},o.a.createElement(b,{typewriter:[t,n],className:l.SearchBox,whatToType:"Enter pickup location"}),o.a.createElement(b,{typewriter:[i,A],className:l.SearchBox,whatToType:"Enter destination"}),o.a.createElement("button",{type:"submit",className:l.RequestButton},"Request now")))};t.default=function(){return o.a.createElement(E,null)}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,